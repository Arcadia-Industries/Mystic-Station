using Content.Server.Anomaly.Effects;
using Content.Shared.Chemistry.Reagent;
using Robust.Shared.Audio;
using Robust.Shared.Prototypes;

namespace Content.Server.Anomaly.Components;

[RegisterComponent, Access(typeof(LiquidAnomalySystem))]
public sealed partial class LiquidAnomalyComponent : Component
{

    /// <summary>
    /// the total amount of reagent generated by the anomaly per pulse
    /// scales with Severity
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public float MaxSolutionGeneration = 100;
    /// <summary>
    /// the total amount of reagent generated by the anomaly in the supercritical phase
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public float SuperCriticalSolutionGeneration = 1000;


    /// <summary>
    /// the maximum amount of injection of a substance into an entity per pulsation
    /// scales with Severity
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public float MaxSolutionInjection = 15;
    /// <summary>
    /// the maximum amount of injection of a substance into an entity in the supercritical phase
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public float SuperCriticalSolutionInjection = 50;


    /// <summary>
    /// The maximum radius in which the anomaly injects reagents into the surrounding containers.
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public float InjectRadius = 3;
    /// <summary>
    /// The maximum radius in which the anomaly injects reagents into the surrounding containers.
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public float SuperCriticalInjectRadius = 15;




    /// <summary>
    /// Blocked reagents for the anomaly.
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public List<ProtoId<ReagentPrototype>> BlacklistChemicals = new();

    /// <summary>
    /// Increasing severity by the specified amount will cause a change of reagent.
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadOnly)]
    public float ReagentChangeStep = 0.1f;

    /// <summary>
    /// Noise made when glue applied.
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadWrite)]
    public SoundSpecifier ChangeSound = new SoundPathSpecifier("/Audio/Effects/waterswirl.ogg");

    /// <summary>
    /// The name of the reagent that the anomaly produces.
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadOnly)]
    public ProtoId<ReagentPrototype> Reagent = "Water";
    /// <summary>
    /// The next threshold beyond which the anomaly will change its reagent.
    /// </summary>
    [DataField, ViewVariables(VVAccess.ReadOnly)]
    public float NextChangeThreshold = 0.5f;
}
