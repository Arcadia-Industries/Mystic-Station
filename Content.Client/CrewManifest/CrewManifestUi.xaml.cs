using Content.Shared.CrewManifest;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.CrewManifest;

[GenerateTypedNameReferences]
public sealed partial class CrewManifestUi : DefaultWindow
{
    public CrewManifestUi()
    {
        RobustXamlLoader.Load(this);

        StationName.AddStyleClass("LabelBig");
    }

    public void Populate(CrewManifestEntries? entries)
    {
        CrewManifestListing.DisposeAllChildren();
        CrewManifestListing.RemoveAllChildren();

        if (entries == null)
        {
            CrewManifestListing.AddChild(new Label()
            {
                Text = Loc.GetString("crew-manifest-no-valid-station")
            });

            return;
        }

        foreach (var (title, list) in entries.Entries)
        {
            CrewManifestListing.AddChild(new CrewManifestSection(title, list));
        }
    }

    private sealed class CrewManifestSection : BoxContainer
    {
        public CrewManifestSection(string sectionTitle, List<CrewManifestEntry> entries)
        {
            AddChild(new Label()
            {
                StyleClasses = { "LabelBig" },
                Text = Loc.GetString(sectionTitle)
            });

            entries.Sort((a, b) => b.DisplayPriority.CompareTo(a.DisplayPriority));

            var gridContainer = new GridContainer()
            {
                Columns = 2
            };

            foreach (var entry in entries)
            {
                var name = new Label()
                {
                    Text = entry.Name
                };

                var title = new Label()
                {
                    Text = entry.JobTitle
                };

                gridContainer.AddChild(name);
                gridContainer.AddChild(title);
            }
        }
    }
}
