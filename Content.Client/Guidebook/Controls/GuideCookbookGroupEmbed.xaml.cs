using System.Diagnostics.CodeAnalysis;
using System.Linq;
using Content.Client.Guidebook.Richtext;
using Content.Shared.Chemistry.Reagent;
using Content.Shared.Kitchen.Components;
using Content.Shared.Prototypes;
using JetBrains.Annotations;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.Guidebook.Controls;

/// <summary>
///     Control for embedding a catagory of food into a guidebook.
/// </summary>
[UsedImplicitly, GenerateTypedNameReferences]
public sealed partial class GuideCookbookGroupEmbed : BoxContainer, IDocumentTag
{
    [Dependency] private readonly IPrototypeManager _prototype = default!;

    public GuideCookbookGroupEmbed()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        MouseFilter = MouseFilterMode.Stop;
    }

    public GuideCookbookGroupEmbed(string group) : this()
    {
        foreach (var entityPrototype in _prototype.EnumeratePrototypes<EntityPrototype>().Where(x => x.HasComponent<CookbookDocumentationComponent>()).OrderBy(p => p.Name))
        {
            if (entityPrototype.TryGetComponent<CookbookDocumentationComponent>(out var comp) && comp.Catagory == group) { CatagoryContainer.AddChild(new GuideFoodEmbed(entityPrototype)); }
        }
    }

    public bool TryParseTag(Dictionary<string, string> args, [NotNullWhen(true)] out Control? control)
    {
        control = null;
        if (!args.TryGetValue("Group", out var group))
        {
            Logger.Error("Reagent group embed tag is missing group argument");
            return false;
        }

        foreach (var entityPrototype in _prototype.EnumeratePrototypes<EntityPrototype>().Where(x => x.HasComponent<CookbookDocumentationComponent>() && !x.Abstract).OrderBy(p => p.Name))
        {
            if (entityPrototype.TryGetComponent<CookbookDocumentationComponent>(out var comp) && comp.Catagory == group) { CatagoryContainer.AddChild(new GuideFoodEmbed(entityPrototype)); }
        }

        control = this;
        return true;
    }
}
