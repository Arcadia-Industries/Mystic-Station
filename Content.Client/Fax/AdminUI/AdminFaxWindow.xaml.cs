using Content.Shared.Fax;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Utility;

namespace Content.Client.Fax.AdminUI;

[GenerateTypedNameReferences]
public sealed partial class AdminFaxWindow : DefaultWindow
{
    public Action<(EntityUid uid, string name, string content)>? OnMessageSend;
    public Action<EntityUid>? OnFollowFax;

    public AdminFaxWindow()
    {
        RobustXamlLoader.Load(this);
        FaxSelector.OnItemSelected += args => FaxSelector.SelectId(args.Id);
        FollowButton.OnPressed += Follow;
        SendButton.OnPressed += SendMessage;
    }

    public void Populate(List<AdminFaxEntry> faxes)
    {
        for (var i = 0; i < faxes.Count; i++)
        {
            var fax = faxes[i];
            FaxSelector.AddItem($"{fax.Name} ({fax.Address})", i);
            FaxSelector.SetItemMetadata(i, fax.Uid);
        }
    }

    private void Follow(BaseButton.ButtonEventArgs obj)
    {
        var faxUid = (EntityUid?) FaxSelector.SelectedMetadata;
        if (faxUid == null)
            return;

        OnFollowFax?.Invoke(faxUid.Value);
    }

    private void SendMessage(BaseButton.ButtonEventArgs obj)
    {
        var faxUid = (EntityUid?) FaxSelector.SelectedMetadata;
        if (faxUid == null)
            return;

        var content = Rope.Collapse(MessageEdit.TextRope);
        if (string.IsNullOrEmpty(content))
            return;

        var name = FromEdit.Text;
        OnMessageSend?.Invoke((faxUid.Value, name, content));
    }
}
