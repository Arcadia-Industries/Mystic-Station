using Content.Client.Chat.UI;
using Content.Client.HUD.UI;
using Content.Client.Info;
using Content.Client.Preferences;
using Content.Client.Sandbox;
using Content.Shared.Sandbox;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.GameObjects;
using Robust.Shared.IoC;
using Robust.Shared.Maths;
using Robust.Shared.Prototypes;
using Robust.Shared.Sandboxing;
using static Robust.Client.UserInterface.Controls.BoxContainer;

namespace Content.Client.HUD.Widgets
{


    [GenerateTypedNameReferences]
    public sealed partial class ButtonBar : HudWidget
    {
        public ButtonBar()
        {
            RobustXamlLoader.Load(this);

            EscapeButton.OnToggled += args => EscapeButtonToggled?.Invoke(args.Pressed);
            CharacterButton.OnToggled += args => CharacterButtonToggled?.Invoke(args.Pressed);
            InventoryButton.OnToggled += args => InventoryButtonToggled?.Invoke(args.Pressed);
            CraftingButton.OnToggled += args => CraftingButtonToggled?.Invoke(args.Pressed);
            ActionButton.OnToggled += args => ActionsButtonToggled?.Invoke(args.Pressed);
            AdminButton.OnToggled += args => AdminButtonToggled?.Invoke(args.Pressed);
            SandboxButton.OnToggled += args => SandboxButtonToggled?.Invoke(args.Pressed);
            InfoButton.OnToggled += args => InfoButtonToggled?.Invoke(args.Pressed);
            InfoButton.OnToggled += ButtonInfoToggledHandler;
        }

        private void ButtonInfoToggledHandler(BaseButton.ButtonToggledEventArgs obj)
        {
            ButtonInfoToggled(obj.Pressed);
        }

        private void ButtonInfoToggled(bool pressed)
        {
            if (!pressed)
                return;

            InfoButton.StyleClasses.Remove(TopButton.StyleClassRedTopButton);
            InfoButton.OnToggled -= ButtonInfoToggledHandler;
        }

        /// <inheritdoc />
        public bool EscapeButtonDown
        {
            get => EscapeButton.Pressed;
            set => EscapeButton.Pressed = value;
        }

        /// <inheritdoc />
        public event Action<bool>? EscapeButtonToggled;

        /// <inheritdoc />
        public bool CharacterButtonDown
        {
            get => CharacterButton.Pressed;
            set => CharacterButton.Pressed = value;
        }

        /// <inheritdoc />
        public bool CharacterButtonVisible
        {
            get => CharacterButton.Visible;
            set => CharacterButton.Visible = value;
        }

        /// <inheritdoc />
        public event Action<bool>? CharacterButtonToggled;

        /// <inheritdoc />
        public bool InventoryButtonDown
        {
            get => InventoryButton.Pressed;
            set => InventoryButton.Pressed = value;
        }

        /// <inheritdoc />
        public bool InventoryButtonVisible
        {
            get => InventoryButton.Visible;
            set => InventoryButton.Visible = value;
        }

        /// <inheritdoc />
        public event Action<bool>? InventoryButtonToggled;

        /// <inheritdoc />
        public bool CraftingButtonDown
        {
            get => CraftingButton.Pressed;
            set => CraftingButton.Pressed = value;
        }

        /// <inheritdoc />
        public bool CraftingButtonVisible
        {
            get => CraftingButton.Visible;
            set => CraftingButton.Visible = value;
        }

        /// <inheritdoc />
        public event Action<bool>? CraftingButtonToggled;

        /// <inheritdoc />
        public bool ActionsButtonDown
        {
            get => ActionButton.Pressed;
            set => ActionButton.Pressed = value;
        }

        /// <inheritdoc />
        public bool ActionsButtonVisible
        {
            get => ActionButton.Visible;
            set => ActionButton.Visible = value;
        }

        /// <inheritdoc />
        public event Action<bool>? ActionsButtonToggled;

        /// <inheritdoc />
        public bool AdminButtonDown
        {
            get => AdminButton.Pressed;
            set => AdminButton.Pressed = value;
        }

        /// <inheritdoc />
        public bool AdminButtonVisible
        {
            get => AdminButton.Visible;
            set => AdminButton.Visible = value;
        }

        /// <inheritdoc />
        public event Action<bool>? AdminButtonToggled;

        /// <inheritdoc />
        public bool SandboxButtonDown
        {
            get => SandboxButton.Pressed;
            set => SandboxButton.Pressed = value;
        }

        /// <inheritdoc />
        public bool SandboxButtonVisible
        {
            get => SandboxButton.Visible;
            set => SandboxButton.Visible = value;
        }

        /// <inheritdoc />
        public event Action<bool>? SandboxButtonToggled;

        /// <inheritdoc />
        public bool InfoButtonDown
        {
            get => InfoButton.Pressed;
            set
            {
                InfoButton.Pressed = value;
                ButtonInfoToggled(value);
            }
        }

        /// <inheritdoc />
        public event Action<bool>? InfoButtonToggled;
    }
}
