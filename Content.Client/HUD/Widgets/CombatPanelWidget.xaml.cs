using Content.Client.Targeting.UI;
using Content.Shared.Targeting;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.HUD.Widgets;


[GenerateTypedNameReferences]
public sealed partial class CombatPanelWidget : HudWidget
{
    public event Action<TargetingZone>? OnTargetZoneChanged {
        add => TargetingDoll.OnZoneChanged += value;
        remove => TargetingDoll.OnZoneChanged -= value;
    }
    public TargetingZone ActiveTargetZone { get => TargetingDoll.ActiveZone; set => TargetingDoll.ActiveZone = value; }
    public CombatPanelWidget()
    {
        RobustXamlLoader.Load(this);
        LayoutContainer.SetGrowHorizontal(this, LayoutContainer.GrowDirection.Begin);
        LayoutContainer.SetGrowVertical(this, LayoutContainer.GrowDirection.Begin);
        LayoutContainer.SetAnchorAndMarginPreset(this, LayoutContainer.LayoutPreset.BottomRight);
        LayoutContainer.SetMarginBottom(this, -10f);
    }


}
