using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.UserInterface.Widgets
{
    // TODO HUD REFACTOR BEFORE MERGE rename this to something else than the one in engine
    [GenerateTypedNameReferences]
    public sealed partial class MenuBar : UIWidget
    {
        public MenuBar()
        {
            RobustXamlLoader.Load(this);
            InfoButton.OnToggled += ButtonInfoToggledHandler;
        }

        private void ButtonInfoToggledHandler(BaseButton.ButtonToggledEventArgs obj)
        {
            ButtonInfoToggled(obj.Pressed);
        }

        private void ButtonInfoToggled(bool pressed)
        {
            if (!pressed)
                return;

            InfoButton.StyleClasses.Remove(MenuButton.StyleClassRedTopButton);
            InfoButton.OnToggled -= ButtonInfoToggledHandler;
        }
    }
}
