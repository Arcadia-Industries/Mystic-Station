#nullable enable
using System.Collections.Generic;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.IoC;

namespace Content.Client.UserInterface.AdminMenu.CustomControls
{
    [GenerateTypedNameReferences]
    public partial class ButtonGrid : GridContainer
    {
        public ButtonGrid()
        {
            IoCManager.InjectDependencies(this);
            RobustXamlLoader.Load(this);
        }

        public void AddCommandButtons(IEnumerable<AdminMenuControls.CommandButton> buttons)
        {
            foreach (var cmd in buttons)
            {
                // Check if the player can do the command
                if (!cmd.CanPress())
                    continue;

                //TODO: make toggle?
                var button = new Button
                {
                    Text = cmd.Name
                };
                button.OnPressed += cmd.ButtonPressed;
                AddChild(button);
            }
        }
    }
}
