using Content.Shared.CCVar;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Configuration;
using Robust.Shared.Timing;
using Robust.Shared.Utility;

namespace Content.Client.UserInterface.Systems.Ghost.Controls.Roles
{
    [GenerateTypedNameReferences]
    public sealed partial class GhostRoleRulesWindow : DefaultWindow
    {
        [Dependency] private readonly IConfigurationManager _cfg = IoCManager.Resolve<IConfigurationManager>();
        private float _timer;
        public bool RoleHasGone = false;

        public GhostRoleRulesWindow(string rules, Action<BaseButton.ButtonEventArgs> requestAction)
        {
            RobustXamlLoader.Load(this);
            var ghostRoleTime = _cfg.GetCVar(CCVars.GhostRoleTime);
            _timer = ghostRoleTime;

            if (ghostRoleTime > 0f)
            {
                var button_str = RoleHasGone
                    ? "ghost-roles-window-request-role-button-timer-gone"
                    : "ghost-roles-window-request-role-button-timer";
                RequestButton.Text = Loc.GetString(button_str, ("time", $"{_timer:0.0}"));
                TopBanner.SetMessage(FormattedMessage.FromMarkupPermissive(rules + "\n" + Loc.GetString("ghost-roles-window-rules-footer", ("time", ghostRoleTime))));
                RequestButton.Disabled = true;
            }

            RequestButton.OnPressed += requestAction;
        }

        protected override void FrameUpdate(FrameEventArgs args)
        {
            base.FrameUpdate(args);
            if (_timer > 0.0)
            {
                _timer -= args.DeltaSeconds;
                var button_str = RoleHasGone
                    ? "ghost-roles-window-request-role-button-timer-gone"
                    : "ghost-roles-window-request-role-button-timer";
                RequestButton.Text = Loc.GetString(button_str, ("time", $"{_timer:0.0}"));
            }
            else
            {
                RequestButton.Disabled = false;
                var button_str = RoleHasGone
                    ? "ghost-roles-window-request-role-button-gone"
                    : "ghost-roles-window-request-role-button";
                RequestButton.Text = Loc.GetString(button_str);
            }
        }
    }
}
