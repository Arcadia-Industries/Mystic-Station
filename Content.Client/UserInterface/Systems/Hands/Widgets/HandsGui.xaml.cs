using Content.Client.UserInterface.Systems.Inventory.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.UserInterface.Systems.Hands.Widgets;

[GenerateTypedNameReferences]
public sealed partial class HandsGui : UIWidget
{
    private ItemStatusPanel StatusPanel { get; }

    public HandsGui()
    {
        RobustXamlLoader.Load(this);

        StatusPanel = UserInterfaceManager.CreateNamedPopup<ItemStatusPanel>("HandsItemStatusPanel", (0, 0)) ??
                      throw new NullReferenceException("Tried to add hands item status panel while one already exists");
        StatusPanel.Update(null);

        var inventoryUiController = UserInterfaceManager.GetUIController<HandsUIController>();
        inventoryUiController.RegisterHandContainer(HandContainer);
    }

    public void UpdatePanelEntity(EntityUid? entity)
    {
        StatusPanel.Update(entity);
        if (entity == null)
        {
            StatusPanel.Close();
            return;
        }

        var globalPos = HandContainer.GlobalPosition;
        var (minX, minY) = StatusPanel.MinSize;
        var box = UIBox2.FromDimensions(globalPos - ((StatusPanel.Width - HandContainer.Width) / 2, StatusPanel.Height),
            (Math.Max(minX, StatusPanel.MinWidth), minY));
        StatusPanel.Open(box);
    }
}
