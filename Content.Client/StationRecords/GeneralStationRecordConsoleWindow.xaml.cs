using System.Linq;
using Content.Shared.StationRecords;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.StationRecords;

[GenerateTypedNameReferences]
public sealed partial class GeneralStationRecordConsoleWindow : DefaultWindow
{
    public Action<StationRecordKey?>? OnKeySelected;

    public GeneralStationRecordConsoleWindow()
    {
        RobustXamlLoader.Load(this);

        RecordListing.OnItemSelected += args =>
        {
            if (RecordListing[args.ItemIndex].Metadata is not StationRecordKey cast)
            {
                return;
            }

            OnKeySelected?.Invoke(cast);
        };

        RecordListing.OnItemDeselected += _ => OnKeySelected?.Invoke(null);
    }

    public void UpdateState(GeneralStationRecordConsoleState state)
    {
        if (state.IsEmpty())
        {
            RecordListingStatus.Visible = true;
            RecordListing.Visible = false;
            RecordListingStatus.Text = Loc.GetString("general-station-record-console-empty-state");
            return;
        }

        RecordListing.Visible = true;
        PopulateRecordListing(state.RecordListing!);
        RecordListing.ClearSelected();

        RecordContainerStatus.Visible = state.Record == null;

        if (state.Record != null)
        {
            PopulateRecordContainer(state.Record);
        }
    }

    private void PopulateRecordListing(Dictionary<StationRecordKey, string> listing)
    {
        foreach (var (key, name) in listing)
        {
            var item = RecordListing.AddItem(name);
            item.Metadata = key;
        }
    }

    private void PopulateRecordContainer(GeneralStationRecord record)
    {
        // sure
        var recordControls = new Control[]
        {
            new Label()
            {
                Text = record.Name
            },
            new Label()
            {
                Text = record.JobTitle
            },
            new Label()
            {
                Text = record.Species
            },
            new Label()
            {
                Text = record.Gender.ToString()
            }
        };

        foreach (var control in recordControls)
        {
            RecordContainer.AddChild(control);
        }
    }
}
