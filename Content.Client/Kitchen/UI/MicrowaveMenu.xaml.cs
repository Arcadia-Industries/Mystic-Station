using System;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Localization;
using Robust.Shared.Maths;

namespace Content.Client.Kitchen.UI
{
    [GenerateTypedNameReferences]
    public partial class MicrowaveMenu : SS14Window
    {
        public class MicrowaveCookTimeButton : Button
        {
            public uint CookTime;
        }

        public event Action<BaseButton.ButtonEventArgs, int>? OnCookTimeSelected;

        private ButtonGroup CookTimeButtonGroup { get; }

        public MicrowaveMenu(MicrowaveBoundUserInterface owner)
        {
            RobustXamlLoader.Load(this);

            CookTimeButtonGroup = new ButtonGroup();

            var index = 0;
            for (var i = 0; i <= 6; i++)
            {
                var newButton = new MicrowaveCookTimeButton
                {
                    Text = index <= 0 ? Loc.GetString("microwave-menu-instant-button") : index.ToString(),
                    CookTime = (uint)index,
                    TextAlign = Label.AlignMode.Center,
                    ToggleMode = true,
                    Group = CookTimeButtonGroup,
                };
                CookTimeButtonVbox.AddChild(newButton);
                newButton.OnToggled += args =>
                {
                    OnCookTimeSelected?.Invoke(args, newButton.GetPositionInParent());

                };
                index += 5;
            }

            var cookTimeOneSecondButton = (Button) CookTimeButtonVbox.GetChild(0);
            cookTimeOneSecondButton.Pressed = true;

            // TODO: Hardcoded value
            CookTimeInfoLabel.Text = Loc.GetString("microwave-menu-cook-time-label", ("time", 1));
        }

        public void ToggleBusyDisableOverlayPanel(bool shouldDisable)
        {
            DisableCookingPanelOverlay.Visible = shouldDisable;
        }
    }
}
