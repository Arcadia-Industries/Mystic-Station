using System;
using Content.Shared.Atmos;
using Content.Shared.Atmos.Monitor;
using Content.Shared.Atmos.Monitor.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Atmos.Monitor.UI
{
    [GenerateTypedNameReferences]
    public class AirAlarmWindow : SS14Window
    {
        public event Action<string, IAtmosDeviceData>? AtmosDeviceDataChanged;
        public event Action<AtmosMonitorThresholdType, AtmosAlarmThreshold, Gas?>? AtmosAlarmThresholdChanged;
        public event Action<AirAlarmMode>? AirAlarmModeChanged;
        public event Action<string> ResyncDeviceRequested;
        public event Action? ResyncAllRequested;

        private Label _address => CDeviceAddress;
        private Label _deviceTotal => CDeviceTotal;
        private RichTextLabel _pressure => CPressureLabel;
        private RichTextLabel _temperature => CTemperatureLabel;
        private RichTextLabel _alarmState => CStatusLabel;

        private BoxContainer _gasReadout => CGasContainer;
        private BoxContainer _ventDevices => CVentContainer;
        private BoxContainer _scrubberDevices => CScrubberContainer;
        private BoxContainer _thresholds => CThresholdContainer;

        private OptionButton _modes => CModeButton;

        public AirAlarmWindow()
        {
            RobustXamlLoader.Load(this);
        }
    }
}
