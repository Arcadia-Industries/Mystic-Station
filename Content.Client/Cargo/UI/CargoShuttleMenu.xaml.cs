using Content.Client.UserInterface;
using Content.Shared.Cargo;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.Cargo.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class CargoShuttleMenu : FancyWindow
    {
        private IPrototypeManager _protoManager;
        private SpriteSystem _spriteSystem;

        public Action? ShuttleCallRequested;
        public Action? ShuttleRecallRequested;

        public CargoShuttleMenu(IPrototypeManager protoManager, SpriteSystem spriteSystem)
        {
            RobustXamlLoader.Load(this);
            _protoManager = protoManager;
            _spriteSystem = spriteSystem;

            Title = Loc.GetString("cargo-console-menu-title");
        }

        public void SetOrders(List<CargoOrderData> orders)
         {
             Orders.DisposeAllChildren();

             foreach (var order in orders)
             {
                 var product = _protoManager.Index<CargoProductPrototype>(order.ProductId);
                 var productName = product.Name;

                 var row = new CargoOrderRow
                 {
                     Order = order,
                     Icon = { Texture = _spriteSystem.Frame0(product.Icon) },
                     ProductName =
                     {
                         Text = Loc.GetString(
                             "cargo-console-menu-populate-orders-cargo-order-row-product-name-text",
                             ("productName", productName),
                             ("orderAmount", order.Amount),
                             ("orderRequester", order.Requester))
                     },
                     Description = {Text = Loc.GetString("cargo-console-menu-order-reason-description",
                         ("reason", order.Reason))}
                 };

                 row.Approve.Visible = false;
                 row.Cancel.Visible = false;

                 Orders.AddChild(row);
             }
         }
    }
}
