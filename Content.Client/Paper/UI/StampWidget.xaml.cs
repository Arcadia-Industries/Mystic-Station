using Content.Shared.Paper;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.ResourceManagement;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.Paper.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class StampWidget : PanelContainer
    {
        private StyleBoxTexture _borderTexture;

        public float Orientation {
            get { return StampedByLabel.Orientation; }
            set { StampedByLabel.Orientation = value; }
        }

        public StampDisplayInfo StampInfo {
            set {
                StampedByLabel.Text = Loc.GetString(value.StampedName);
                StampedByLabel.FontColorOverride = value.StampedColor;
                ModulateSelfOverride = value.StampedColor;
            }
        }

        public StampWidget()
        {
            RobustXamlLoader.Load(this);
            var resCache = IoCManager.Resolve<IResourceCache>();
            var borderImage = resCache.GetResource<TextureResource>(
                    "/Textures/Interface/Paper/paper_stamp_border.svg.96dpi.png");
            _borderTexture = new StyleBoxTexture {
                Texture = borderImage,
            };
            _borderTexture.SetPatchMargin(StyleBoxTexture.Margin.All, 7.0f);
            PanelOverride = _borderTexture;
        }

        protected override void Draw(DrawingHandleScreen handle)
        {
            var prototypes = IoCManager.Resolve<IPrototypeManager>();
            var shader = prototypes.Index<ShaderPrototype>("PaperStamp").InstanceUnique();
            shader.SetParameter("objCoord", GlobalPosition * UIScale * new Vector2(1, -1));
            handle.UseShader(shader);
            handle.SetTransform(GlobalPosition * UIScale, Orientation, Vector2.One);
            base.Draw(handle);
            handle.UseShader(null);
        }
    }
}
