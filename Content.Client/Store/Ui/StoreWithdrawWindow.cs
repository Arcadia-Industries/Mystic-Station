using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Localization;
using Content.Shared.FixedPoint2;

namespace Content.Client.Store.Ui;

/// <summary>
///     Window to select amount TC to withdraw from Uplink account
///     Used as sub-window in Uplink UI
/// </summary>
[GenerateTypedNameReferences]
public sealed partial class StoreWithdrawWindow : DefaultWindow
{
    [Dependency] private readonly IPrototypeManager _prototypeManager = default!;

    public event System.Action<int>? OnWithdrawAttempt;

    public StoreWithdrawWindow(Dictionary<string, FixedPoint2> balance)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        // setup withdraw slider
        WithdrawSlider.MinValue = 1;
        WithdrawSlider.MaxValue = tcCount;

        // and buttons
        ApplyButton.OnButtonDown += _ =>
        {
            OnWithdrawAttempt?.Invoke(WithdrawSlider.Value);
            Close();
        };
    }
}
