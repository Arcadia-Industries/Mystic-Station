using System.Linq;
using Content.Client.Administration.UI.Notes;
using Content.Client.UserInterface.Controls;
using Content.Shared.Administration.Notes;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Administration.UI.AdminRemarks;

[GenerateTypedNameReferences]
public sealed partial class AdminRemarksWindow : FancyWindow
{
    [Dependency] private readonly IEntitySystemManager _entitySystem = default!;
    private readonly SpriteSystem _sprites;
    private Dictionary<int, AdminNotesLine> Inputs { get; } = new();

    public AdminRemarksWindow()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);
        _sprites = _entitySystem.GetEntitySystem<SpriteSystem>();
        Title = Loc.GetString("admin-remarks-title");
    }

    public void SetNotes(Dictionary<int, SharedAdminNote> notes)
    {
        foreach (var (id, input) in Inputs)
        {
            if (notes.ContainsKey(id))
                continue;
            NotesContainer.RemoveChild(input);
            Inputs.Remove(id);
        }

        foreach (var note in notes.Values.OrderByDescending(note => note.CreatedAt))
        {
            if (Inputs.TryGetValue(note.Id, out var input))
            {
                input.UpdateNote(note);
                continue;
            }

            input = new AdminNotesLine(_sprites, note);
            NotesContainer.AddChild(input);
            Inputs[note.Id] = input;
        }
    }
}
