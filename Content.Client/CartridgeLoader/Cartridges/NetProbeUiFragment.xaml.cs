using Content.Shared.CartridgeLoader.Cartridges;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.CartridgeLoader.Cartridges;

[GenerateTypedNameReferences]
public sealed partial class NetProbeUiFragment : BoxContainer
{
    public NetProbeUiFragment()
    {
        RobustXamlLoader.Load(this);
    }

    public void UpdateState(List<ProbedNetworkDevice> devices)
    {
        ProbedDeviceContainer.RemoveAllChildren();

        //Reverse the list so the oldest entries appear at the bottom
        devices.Reverse();

        foreach (var device in devices)
        {
            AddProbedDevice(device);
        }
    }

    private void AddProbedDevice(ProbedNetworkDevice device)
    {
        var row = new BoxContainer();
        row.HorizontalExpand = true;
        row.Orientation = LayoutOrientation.Horizontal;
        row.Margin = new Thickness(4);

        var nameLabel = new Label();
        nameLabel.Text = device.Name;
        nameLabel.HorizontalExpand = true;
        nameLabel.ClipText = true;
        row.AddChild(nameLabel);

        var addressLabel = new Label();
        addressLabel.Text = device.Address;
        addressLabel.HorizontalExpand = true;
        addressLabel.ClipText = true;
        row.AddChild(addressLabel);

        var frequencyLabel = new Label();
        frequencyLabel.Text = device.Frequency;
        frequencyLabel.HorizontalExpand = true;
        frequencyLabel.ClipText = true;
        row.AddChild(frequencyLabel);

        var networkLabel = new Label();
        networkLabel.Text = device.NetId;
        networkLabel.HorizontalExpand = true;
        networkLabel.ClipText = true;
        row.AddChild(networkLabel);

        ProbedDeviceContainer.AddChild(row);
    }
}
