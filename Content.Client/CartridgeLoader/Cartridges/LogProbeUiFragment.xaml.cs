using Content.Shared.CartridgeLoader.Cartridges;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.CartridgeLoader.Cartridges;

[GenerateTypedNameReferences]
public sealed partial class LogProbeUiFragment : BoxContainer
{
    private readonly StyleBoxFlat _styleBox = new()
    {
        BackgroundColor = Color.Transparent,
        BorderColor = Color.FromHex("#5a5a5a"),
        BorderThickness = new Thickness(0, 0, 0, 1)
    };

    public LogProbeUiFragment()
    {
        RobustXamlLoader.Load(this);
        Orientation = LayoutOrientation.Vertical;
        HorizontalExpand = true;
        VerticalExpand = true;
        HeaderPanel.PanelOverride = _styleBox;
    }

    public void UpdateState(List<PulledAccessLog> logs)
    {
        ProbedDeviceContainer.RemoveAllChildren();

        //Reverse the list so the oldest entries appear at the bottom
        logs.Reverse();

        //Enable scrolling if there are more entries that can fit on the screen
        ScrollContainer.HScrollEnabled = logs.Count > 9;

        foreach (var log in logs)
        {
            AddAccessLog(log);
        }
    }

    private void AddAccessLog(PulledAccessLog log)
    {
        var row = new BoxContainer();
        row.HorizontalExpand = true;
        row.Orientation = LayoutOrientation.Horizontal;
        row.Margin = new Thickness(4);

        var timeLabel = new Label();
        timeLabel.Text = TimeSpan.FromSeconds(Math.Truncate(log.Time.TotalSeconds)).ToString();
        timeLabel.HorizontalExpand = false;
        timeLabel.SetWidth = 75;
        timeLabel.ClipText = true;
        row.AddChild(timeLabel);

        var accessorLabel = new Label();
        accessorLabel.Text = log.Accessor;
        accessorLabel.HorizontalExpand = true;
        accessorLabel.ClipText = true;
        row.AddChild(accessorLabel);

        ProbedDeviceContainer.AddChild(row);
    }
}
