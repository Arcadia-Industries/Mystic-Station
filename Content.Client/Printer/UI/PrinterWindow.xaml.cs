using System.IO;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using static Robust.Client.UserInterface.Controls.BaseButton;

namespace Content.Client.Printer.UI;

[GenerateTypedNameReferences]
public sealed partial class PrinterWindow : DefaultWindow
{

    public PrinterBoundUi _owner;

    public PrinterWindow(PrinterBoundUi owner)
    {
        _owner = owner;
        RobustXamlLoader.Load(this);
        FileButton.OnPressed += FileButtonPressed;
        CopiesNumber.ValueChanged += ValidadeCopiesNumber;
        CopiesNumber.InitDefaultButtons();
        CopiesNumber.LineEditDisabled = true;
    }

    private async void FileButtonPressed(ButtonEventArgs args)
    {
        //Open file dialog.
        var filters = new FileDialogFilters(new FileDialogFilters.Group("txt"));
        await using var file = await _owner._fileDialogManager.OpenFile(filters);
        //If UI gets closed of file is null return.
        if (Disposed || file == null)
            return;
        //Read the file contents and raise event.
        StreamReader reader = new StreamReader(file);
        var paperName = Name.Text;
        _owner.PrintFileContents(reader.ReadToEnd(), CopiesNumber.Value, paperName);
    }

    private void ValidadeCopiesNumber(ValueChangedEventArgs args)
    {
        if(args.Value < 1)
            CopiesNumber.Value = 1;
        if(args.Value > 5)
            CopiesNumber.Value = 5;
    }

}
