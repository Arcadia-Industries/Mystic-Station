using System;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Nuke
{
    [GenerateTypedNameReferences]
    public partial class NukeMenu : SS14Window
    {
        public event Action<int>? OnKeypadButtonPressed;
        public event Action? OnClearButtonPressed;
        public event Action? OnEnterButtonPressed;

        public NukeMenu()
        {
            RobustXamlLoader.Load(this);
            FillKeypadGrid();
        }

        /// <summary>
        ///     Fill keypad buttons in keypad grid
        /// </summary>
        private void FillKeypadGrid()
        {
            // add 3 rows of keypad buttons (1-9)
            for (var i = 1; i <= 9; i++)
            {
                AddKeypadButton(i);
            }

            // clear button
            var clearBtn = new Button()
            {
                Text = "C"
            };
            clearBtn.OnPressed += _ => OnClearButtonPressed?.Invoke();
            KeypadGrid.AddChild(clearBtn);

            // zero button
            AddKeypadButton(0);

            // enter button
            var enterBtn = new Button()
            {
                Text = "E"
            };
            enterBtn.OnPressed += _ => OnEnterButtonPressed?.Invoke();
            KeypadGrid.AddChild(enterBtn);
        }

        private void AddKeypadButton(int i)
        {
            var btn = new Button()
            {
                Text = i.ToString()
            };

            btn.OnPressed += _ => OnKeypadButtonPressed?.Invoke(i);
            KeypadGrid.AddChild(btn);
        }
    }
}
