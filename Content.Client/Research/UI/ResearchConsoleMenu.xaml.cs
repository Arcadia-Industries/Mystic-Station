using System.Linq;
using Content.Client.UserInterface.Controls;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.Research.UI;

[GenerateTypedNameReferences]
public sealed partial class ResearchConsoleMenu : FancyWindow
{
    [Dependency] private readonly IEntityManager _entity = default!;
    [Dependency] private readonly IPrototypeManager _prototype = default!;
    private readonly ResearchSystem _research;
    private readonly SpriteSystem _sprite;

    public ResearchConsoleBoundUserInterface Owner { get; }

    public EntityUid Entity;

    public ResearchConsoleMenu(EntityUid entity, ResearchConsoleBoundUserInterface owner)
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _research = _entity.System<ResearchSystem>();
        _sprite = _entity.System<SpriteSystem>();

        Owner = owner;
        Entity = entity;

        var allTech = _research.GetAvailableTechnologies(Entity);

        foreach (var tech in allTech)
        {
            AvailableList.AddItem(Loc.GetString(tech.Name), _sprite.Frame0(tech.Icon), false);
            var item = new TechnologyCardControl(tech, _prototype, _sprite);
            TechnologyCardsContainer.AddChild(item);
        }
    }
}

