using Content.Client.Stylesheets;
using Content.Shared.StatusIcon;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;
using System.Numerics;

namespace Content.Client.Access.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class AgentIDCardWindow : DefaultWindow
    {
        [Dependency] private readonly IPrototypeManager _prototypeManager = default!;
        [Dependency] private readonly IEntitySystemManager _entitySystem = default!;
        private readonly SpriteSystem _spriteSystem = default!;

        private static string[] JobIconIds = new[] { "JobIconDetective",
            "JobIconQuarterMaster",
            "JobIconBotanist",
            "JobIconBoxer",
            "JobIconAtmosphericTechnician",
            "JobIconNanotrasen",
            "JobIconPrisoner",
            "JobIconJanitor",
            "JobIconChemist",
            "JobIconStationEngineer",
            "JobIconSecurityOfficer",
            "JobIconChiefMedicalOfficer",
            "JobIconRoboticist",
            "JobIconChaplain",
            "JobIconLawyer",
            "JobIconUnknown",
            "JobIconLibrarian",
            "JobIconCargoTechnician",
            "JobIconScientist",
            "JobIconResearchAssistant",
            "JobIconGeneticist",
            "JobIconClown",
            "JobIconCaptain",
            "JobIconHeadOfPersonnel",
            "JobIconVirologist",
            "JobIconShaftMiner",
            "JobIconPassenger",
            "JobIconChiefEngineer",
            "JobIconBartender",
            "JobIconHeadOfSecurity",
            "JobIconBrigmedic",
            "JobIconMedicalDoctor",
            "JobIconParamedic",
            "JobIconChef",
            "JobIconWarden",
            "JobIconResearchDirector",
            "JobIconMime",
            "JobIconMusician",
            "JobIconReporter",
            "JobIconPsychologist",
            "JobIconMedicalIntern",
            "JobIconTechnicalAssistant",
            "JobIconServiceWorker",
            "JobIconSecurityCadet",
            "JobIconZookeeper"
        };
        private const int JobIconColumnCount = 10;

        public event Action<string>? OnNameChanged;
        public event Action<string>? OnJobChanged;
        public readonly List<Button> JobIconButtons = new();
        public readonly Dictionary<int, string> IconIdByIndex = new();

        public AgentIDCardWindow()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);
            _spriteSystem = _entitySystem.GetEntitySystem<SpriteSystem>();

            NameLineEdit.OnTextEntered += e => OnNameChanged?.Invoke(e.Text);
            NameLineEdit.OnFocusExit += e => OnNameChanged?.Invoke(e.Text);

            JobLineEdit.OnTextEntered += e => OnJobChanged?.Invoke(e.Text);
            JobLineEdit.OnFocusExit += e => OnJobChanged?.Invoke(e.Text);

            var jobIconGroup = new ButtonGroup();
            var i = 0;
            foreach (var jobIconId in JobIconIds)
            {
                if (!_prototypeManager.TryIndex<StatusIconPrototype>(jobIconId, out var jobIcon))
                {
                    continue;
                }

                String styleBase = StyleBase.ButtonOpenBoth;
                var modulo = i % JobIconColumnCount;
                if (modulo == 0)
                    styleBase = StyleBase.ButtonOpenRight;
                else if (modulo == JobIconColumnCount - 1)
                    styleBase = StyleBase.ButtonOpenLeft;

                // Generate buttons
                var jobIconButton = new Button
                {
                    Access = AccessLevel.Public,
                    StyleClasses = { styleBase },
                    MaxSize = new Vector2(42, 28),
                    Group = jobIconGroup,
                    Pressed = i == 0,
                };

                // Generate buttons textures
                TextureRect jobIconTexture = new TextureRect
                {
                    Texture = _spriteSystem.Frame0(jobIcon.Icon),
                    TextureScale = new Vector2(2.5f, 2.5f),
                    Stretch = TextureRect.StretchMode.KeepCentered,
                };

                jobIconButton.AddChild(jobIconTexture);

                JobIconButtons.Add(jobIconButton);
                Grid.AddChild(jobIconButton);
                IconIdByIndex.Add(i, jobIcon.ID);

                i++;
            }
        }

        public void SetCurrentName(string name)
        {
            NameLineEdit.Text = name;
        }

        public void SetCurrentJob(string job)
        {
            JobLineEdit.Text = job;
        }
    }
}
