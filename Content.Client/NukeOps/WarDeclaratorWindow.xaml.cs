using System;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;
using Robust.Client.Graphics;

namespace Content.Client.NukeOps
{
    [GenerateTypedNameReferences]
    public sealed partial class WarDeclaratorWindow : DefaultWindow
    {
        public event Action<string>? OnMessageEntered;
        public event Action? OnWarButtonPressed;
        public event Action? OnDraw;

        public WarDeclaratorWindow()
        {
            RobustXamlLoader.Load(this);

            MessageLineEdit.OnTextEntered += e => OnMessageEntered?.Invoke(e.Text);
            WarButton.OnPressed += e => OnWarButtonPressed?.Invoke();
        }

        public void SetMessage(string msg)
        {
            MessageLineEdit.Text = msg;
        }

        protected override void Draw(DrawingHandleScreen handle)
        {
            base.Draw(handle);
            OnDraw?.Invoke();
        }
    }
}
