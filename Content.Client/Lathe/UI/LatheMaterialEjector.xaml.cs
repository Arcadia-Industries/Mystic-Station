using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Lathe.UI;

[GenerateTypedNameReferences]
public sealed partial class LatheMaterialEjector : PanelContainer
{
    public string Material;
    public Action<string, int>? OnEjectPressed;

    public LatheMaterialEjector(string material, Action<string, int>? onEjectPressed, int maxEjectableSheets)
    {
        RobustXamlLoader.Load(this);

        Material = material;
        OnEjectPressed = onEjectPressed;

        PopulateButtons(maxEjectableSheets);
    }

    public void PopulateButtons(int maxEjectableSheets)
    {
        int[] sheetsToEjectArray = { 1, 5, 10, 30 };

        foreach (int sheetsToEject in sheetsToEjectArray)
        {
            var button = new Button()
            {
                Name = $"{sheetsToEject}",
                Access = AccessLevel.Public,
                Text = Loc.GetString($"{sheetsToEject}")
            };

            button.OnPressed += (_) =>
            {
                OnEjectPressed?.Invoke(Material, sheetsToEject);
            };

            button.Disabled = maxEjectableSheets < sheetsToEject;

            Content.AddChild(button);
        }
    }
}
