using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.UserInterface;

namespace Content.Client.Lathe.UI
{
    [GenerateTypedNameReferences]
    public sealed partial class MaterialRow : PanelContainer
    {
        public string Material;
        public int Amount;
        public int Multiplier;
        public bool CanEject;
        public Action<string, int, int?>? OnEjectPressed;

        public MaterialRow(string material, int amount, bool canEject, int multiplier, Action<string, int, int?>? onEjectPressed)
        {
            RobustXamlLoader.Load(this);

            Material = material;
            Amount = amount;
            Multiplier = multiplier;
            CanEject = canEject;
            OnEjectPressed = onEjectPressed;
            PopulateButtons();
        }

        public void PopulateButtons()
        {
            if (!CanEject)
                return;
            var eject5Button = new Button()
            {
                Name = "Eject5",
                Access = AccessLevel.Public,
                Text = "5"
            };
            eject5Button.OnPressed += (_) =>
            {
                OnEjectPressed?.Invoke(Material, Amount, 5);
            };
            Content.AddChild(eject5Button);

            var eject10Button = new Button()
            {
                Name = "Eject10",
                Access = AccessLevel.Public,
                Text = "10",
            };
            eject10Button.OnPressed += (_) => OnEjectPressed?.Invoke(Material, Amount, 10);
            Content.AddChild(eject10Button);

            var eject30Button = new Button()
            {
                Name = "Eject30",
                Access = AccessLevel.Public,
                Text = "30",
            };
            eject30Button.OnPressed += (_) => OnEjectPressed?.Invoke(Material, Amount, 30);
            Content.AddChild(eject30Button);

            var ejectAllButton = new Button()
            {
                Name = "Eject",
                Access = AccessLevel.Public,
                Text = Loc.GetString("lathe-menu-material-eject"),
            };
            ejectAllButton.OnPressed += (_) => OnEjectPressed?.Invoke(Material, Amount, null);
            Content.AddChild(ejectAllButton);
        }
    }
}
