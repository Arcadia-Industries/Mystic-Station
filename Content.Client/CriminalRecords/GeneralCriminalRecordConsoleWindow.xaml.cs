using Content.Shared.CriminalRecords;
using Content.Shared.Security;
using Content.Shared.StationRecords;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.CriminalRecords;

[GenerateTypedNameReferences]
public sealed partial class GeneralCriminalRecordConsoleWindow : DefaultWindow
{
    public Action<StationRecordKey?>? OnKeySelected;
    private bool _isPopulating;
    public Action<BaseButton.ButtonEventArgs, string?, string?>? OnArrestButtonPressed;
    public Action<OptionButton.ItemSelectedEventArgs, SecurityStatus, string?, string?>? OnStatusOptionButtonSelected;
    private string? _recordName;

    public GeneralCriminalRecordConsoleWindow()
    {
        RobustXamlLoader.Load(this);

        RecordListing.OnItemSelected += args =>
        {
            if (_isPopulating || RecordListing[args.ItemIndex].Metadata is not StationRecordKey cast)
            {
                return;
            }

            OnKeySelected?.Invoke(cast);
        };

        RecordListing.OnItemDeselected += _ =>
        {
            if (!_isPopulating)
                OnKeySelected?.Invoke(null);
        };

        ArrestButton.OnPressed += e => OnArrestButtonPressed?.Invoke(e, ReasonLineEdit.Text, _recordName);

        StatusOptionButton.OnItemSelected += args =>
        {
            args.Button.SelectId(args.Id);
            OnStatusOptionButtonSelected?.Invoke(args, (SecurityStatus) StatusOptionButton.GetItemMetadata(args.Id)!,
                ReasonLineEdit.Text, _recordName);
        };

    }

    public void UpdateState(GeneralCriminalRecordConsoleState state)
    {
        if (state.RecordListing == null)
        {
            RecordListingStatus.Visible = true;
            RecordListing.Visible = false;
            RecordListingStatus.Text = Loc.GetString("general-criminal-record-console-empty-state");
            return;
        }

        RecordListingStatus.Visible = false;
        RecordListing.Visible = true;
        PopulateRecordListing(state.RecordListing!, state.SelectedKey);

        RecordContainerStatus.Visible = state.CriminalRecord == null;

        ArrestButton.Text = state.CriminalRecord?.Status == SecurityStatus.Detained ? Loc.GetString("general-criminal-record-unarrest-button") : Loc.GetString("general-criminal-record-arrest-button");

        ReasonLineEdit.Visible = state.SelectedKey != null;
        ArrestButton.Visible = state.SelectedKey != null;
        CriminalDivider.Visible = state.SelectedKey != null;
        StatusOptionButton.Visible = state.SelectedKey != null;

        StatusOptionButton.Disabled = state.CriminalRecord?.Status == SecurityStatus.Detained;

        if ((state.CriminalRecord != null) & (state.StationRecord != null))
        {
            ReasonLineEdit.Visible = state.SelectedKey != null;
            ArrestButton.Visible = state.SelectedKey != null;
            CriminalDivider.Visible = state.SelectedKey != null;
            StatusOptionButton.Visible = state.SelectedKey != null;

            StatusOptionButton.Disabled = state.CriminalRecord?.Status == SecurityStatus.Detained;

            if (!StatusOptionButton.Disabled)
            {
                StatusOptionButton.Clear();

                var idNone = AddStatusSelect(SecurityStatus.None.ToString(), SecurityStatus.None);
                if (SecurityStatus.None == state.CriminalRecord?.Status)
                    StatusOptionButton.Select(idNone);

                var idWanted = AddStatusSelect(SecurityStatus.Wanted.ToString(), SecurityStatus.Wanted);
                if (SecurityStatus.Wanted == state.CriminalRecord?.Status)
                    StatusOptionButton.Select(idWanted);
            }
            else
                StatusOptionButton.AddItem(SecurityStatus.Detained.ToString());

            RecordContainerStatus.Visible = state.SelectedKey == null;
            RecordContainerStatus.Text = state.SelectedKey != null
                ? Loc.GetString("general-criminal-record-console-no-record-found")
                : Loc.GetString("general-criminal-record-console-select-record-info");
            _recordName = state.StationRecord?.Name;
            PopulateRecordContainer(state.StationRecord!, state.CriminalRecord!);
        }
        else
        {
            RecordContainer.DisposeAllChildren();
            RecordContainer.RemoveAllChildren();
        }
    }

    private void PopulateRecordListing(Dictionary<StationRecordKey, string> listing, StationRecordKey? selected)
    {
        RecordListing.Clear();
        RecordListing.ClearSelected();

        _isPopulating = true;
        foreach (var (key, name) in listing)
        {
            var item = RecordListing.AddItem(name);
            item.Metadata = key;

            if (selected != null && key.ID == selected.Value.ID)
            {
                item.Selected = true;
            }
        }
        _isPopulating = false;

        RecordListing.SortItemsByText();
    }

    private void PopulateRecordContainer(GeneralStationRecord stationRecord, GeneralCriminalRecord criminalRecord)
    {
        RecordContainer.DisposeAllChildren();
        RecordContainer.RemoveAllChildren();
        // sure

        var recordControls = new Control[]
        {
            new Label()
            {
                Text = stationRecord.Name,
                StyleClasses = { "LabelBig" }
            },
            new Label()
            {
                Text = Loc.GetString("general-criminal-record-console-record-age", ("age", stationRecord.Age.ToString()))

            },
            new Label()
            {
                Text = Loc.GetString("general-criminal-record-console-record-title", ("job", Loc.GetString(stationRecord.JobTitle)))
            },
            new Label()
            {
                Text = Loc.GetString("general-criminal-record-console-record-species", ("species", stationRecord.Species))
            },
            new Label()
            {
                Text = Loc.GetString("general-criminal-record-console-record-gender", ("gender", stationRecord.Gender.ToString()))
            },
            new Label()
            {
                Text = Loc.GetString("general-criminal-record-console-record-fingerprint", ("fingerprint", stationRecord.Fingerprint ?? Loc.GetString("generic-not-available-shorthand")))
            },
            new Label()
            {
                Text = Loc.GetString("general-criminal-record-console-record-status", ("status", criminalRecord.Status.ToString())!)
            }
        };



        foreach (var control in recordControls)
        {
            RecordContainer.AddChild(control);
        }

        if (criminalRecord.Reason != string.Empty)
        {
            var label = new Label()
            {
                Text = criminalRecord.Reason
            };
            RecordContainer.AddChild(label);
        }
    }

    private int AddStatusSelect(string name, SecurityStatus status)
    {
        StatusOptionButton.AddItem(name);
        StatusOptionButton.SetItemMetadata(StatusOptionButton.ItemCount - 1, status);
        return StatusOptionButton.ItemCount - 1;
    }
}
