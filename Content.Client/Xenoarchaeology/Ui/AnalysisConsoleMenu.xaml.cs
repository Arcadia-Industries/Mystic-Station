using System.Collections.Generic;
using Content.Client.UserInterface.Controls;
using Content.Shared.Research.Prototypes;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;
using Robust.Client.Utility;
using Robust.Shared.IoC;
using Robust.Shared.Localization;
using Robust.Shared.Prototypes;

namespace Content.Client.Xenoarchaeology.Ui;

[GenerateTypedNameReferences]
public sealed partial class AnalysisConsoleMenu : FancyWindow
{
    [Dependency] private readonly IEntityManager _entity;

    public event Action<BaseButton.ButtonEventArgs>? OnServerSelectionButtonPressed;

    public AnalysisConsoleMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

        _entity = IoCManager.Resolve<IEntityManager>();

        ServerSelectionButton.OnPressed += a => OnServerSelectionButtonPressed?.Invoke(a);
    }

    public void SetScanButtonDisabled(bool disabled)
    {
        ScanButton.Disabled = disabled;
    }

    public void UpdateArtifactIcon(EntityUid? uid)
    {
        if (uid == null)
        {
            ArtifactDisplay.Visible = false;
            return;
        }
        ArtifactDisplay.Visible = true;

        if (!_entity.TryGetComponent<SpriteComponent>(uid, out var sprite))
            return;

        ArtifactDisplay.Sprite = sprite;
    }
}

