using Content.Shared.SurveillanceCamera;
using Robust.Client.AutoGenerated;
using Robust.Client.Graphics;
using Robust.Client.UserInterface.CustomControls;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.SurveillanceCamera.UI;

[GenerateTypedNameReferences]
public sealed partial class SurveillanceCameraMonitorWindow : DefaultWindow
{
    public event Action<string>? CameraSelected;

    public SurveillanceCameraMonitorWindow()
    {
        RobustXamlLoader.Load(this);
    }

    // The UI class should get the eye from the entity, and then
    // pass it here so that the UI can change its view.
    public void UpdateState(IEye eye, List<string> subnets)
    {}

    // When a subnet is queried from the client UI, it should
    // populate that subnet's tree with the nodes that indicate
    // the cameras in that subnet.
    public void PopulateSubnet(List<SurveillanceCameraInfo> subnetInfo)
    {}

}
