using Content.Client.UserInterface.Controls;
using Content.Shared.Silicons.Laws;
using Content.Shared.Silicons.Laws.Components;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Prototypes;

namespace Content.Client.Silicons.Laws.Ui;

[GenerateTypedNameReferences]
public sealed partial class SiliconLawMenu : FancyWindow
{
    [Dependency] private readonly IPrototypeManager _prototype = default!;

    public SiliconLawMenu()
    {
        RobustXamlLoader.Load(this);
        IoCManager.InjectDependencies(this);

    }

    public void Update(SiliconLawBuiState state)
    {
        var str = string.Empty;
        var count = 1;
        foreach (var law in state.LawPrototypes)
        {
            var proto = _prototype.Index<SiliconLawPrototype>(law);

            var control = new LawDisplay(proto, count);
            count++;

            LawDisplayContainer.AddChild(control);
        }

        LawsLabel.Text = str;
    }
}

