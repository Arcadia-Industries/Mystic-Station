using Content.Shared.Ghost.Roles;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Timing;

namespace Content.Client.Ghost.Roles.UI;

[GenerateTypedNameReferences]
public sealed partial class GhostRoleEntryButtons : BoxContainer
{
    private readonly IGameTiming _gameTiming;

    private readonly TimeSpan _expiresAt;
    private readonly bool _requested;

    public GhostRoleEntryButtons(GhostRoleInfo role, IGameTiming timing)
    {
        RobustXamlLoader.Load(this);

        _gameTiming = timing;
        _expiresAt = role.ExpiresAt;
        _requested = role.IsRequested;

        RequestButton.Visible = !_requested;
        CancelButton.Visible = _requested;

        TimeRemaining.MinValue = 0;
        TimeRemaining.MaxValue = (float)(role.ExpiresAt.TotalSeconds - role.AddedAt.TotalSeconds);
        TimeRemaining.Value = (float)(role.ExpiresAt.TotalSeconds - _gameTiming.CurTime.TotalSeconds);
    }

    protected override void FrameUpdate(FrameEventArgs args)
    {
        base.FrameUpdate(args);
        TimeRemaining.Value = (float)(_expiresAt.TotalSeconds - _gameTiming.CurTime.TotalSeconds);
    }
}
