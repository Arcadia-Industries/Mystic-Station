using Content.Shared.Mech;
using Robust.Client.AutoGenerated;
using Robust.Client.GameObjects;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.XAML;

namespace Content.Client.Mech.Ui;

[GenerateTypedNameReferences]
public sealed partial class MechEquipmentControl : Control
{
    public event Action<bool>? OnEnableButtonPressed;
    public event Action? OnRemoveButtonPressed;

    public MechEquipmentControl(string itemName, MechEquipmentUiInformation info, SpriteComponent? sprite = null)
    {
        RobustXamlLoader.Load(this);

        EquipmentName.SetMessage(itemName);
        EquipmentView.Sprite = sprite;

        EnableButton.Visible = info.CanBeEnabled;
        RemoveButton.Visible = info.CanBeRemoved;

        EnableButton.OnPressed += _ => OnEnableButtonPressed?.Invoke(!EnableButton.Disabled);
        RemoveButton.OnPressed += _ => OnRemoveButtonPressed?.Invoke();
    }
}
