- type: entity
  id: SignalSwitch
  name: signal switch
  description: It's a switch for toggling power to things.
  placement:
    mode: SnapgridCenter
    snap:
    - Wallmount
  components:
  - type: WallMount
    arc: 360
  - type: Clickable
  - type: InteractionOutline
  - type: Physics
    canCollide: false
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch.rsi
    state: on
  - type: SignalSwitch
  - type: UseDelay
    delay: 0.5 # prevent light-toggling auto-clickers.
  - type: Rotatable
  - type: Construction
    graph: SignalSwitchGraph
    node: SignalSwitchNode
  - type: Fixtures
  - type: DeviceNetwork
    deviceNetId: Wireless
  - type: WirelessNetworkConnection
    range: 200
  - type: DeviceLinkSource
    ports:
    - On
    - Off
    - Status
    lastSignals:
      Status: false

- type: entity
  id: SignalButton
  name: signal button
  description: It's a button for activating something.
  placement:
    mode: SnapgridCenter
    snap:
    - Wallmount
  components:
  - type: WallMount
    arc: 360
  - type: Clickable
  - type: InteractionOutline
  - type: Physics
    canCollide: false
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch.rsi
    state: dead
  - type: UseDelay
    delay: 0.5 # prevent light-toggling auto-clickers.
  - type: SignalSwitch
    onPort: Pressed
    offPort: Pressed
    statusPort: Pressed
  - type: Rotatable
  - type: Construction
    graph: SignalButtonGraph
    node: SignalButtonNode
  - type: Fixtures
  - type: DeviceNetwork
    deviceNetId: Wireless
  - type: WirelessNetworkConnection
    range: 200
  - type: DeviceLinkSource
    ports:
      - Pressed
  - type: Damageable
    damageContainer: Inorganic
    damageModifierSet: Metallic
  - type: Destructible
    thresholds:
      - trigger:
          !type:DamageTrigger
          damage: 80
        behaviors:
          - !type:DoActsBehavior
            acts: [ "Destruction" ]
      - trigger:
          !type:DamageTrigger
          damage: 40
        behaviors:
          - !type:DoActsBehavior
            acts: [ "Destruction" ]
          - !type:PlaySoundBehavior
            sound:
              collection: MetalBreak
              params:
                volume: -8

- type: entity
  id: ApcNetSwitch
  name: apc net switch
  description: It's a switch for toggling lights that are connected to the same apc.
  placement:
    mode: SnapgridCenter
    snap:
      - Wallmount
  components:
    - type: WallMount
      arc: 360
    - type: Clickable
    - type: InteractionOutline
    - type: Physics
      canCollide: false
    - type: Transform
      anchored: true
    - type: Sprite
      drawdepth: SmallObjects
      sprite: Structures/Wallmounts/switch.rsi
      state: on
    - type: Rotatable
    - type: ExtensionCableReceiver
    - type: DeviceNetwork
      deviceNetId: Apc
      transmitFrequencyId: SmartLight # assuming people want to use it for light switches.
    - type: ApcNetworkConnection
    - type: ApcNetSwitch
    - type: Construction
      graph: LightSwitchGraph
      node: LightSwitchNode
    - type: Fixtures

- type: entity
  id: TwoWayLever
  name: two way lever
  description: A two way lever.
  placement:
    mode: SnapgridCenter
  components:
    - type: Clickable
    - type: InteractionOutline
    - type: Sprite
      drawdepth: FloorObjects
      sprite: Structures/conveyor.rsi
      layers:
        - state: switch-off
          map: ["enabled", "enum.TwoWayLeverState.Middle"]
    - type: TwoWayLever
    - type: UseDelay
      delay: 0.2 # prevent light-toggling auto-clickers.
    - type: Appearance
    - type: GenericVisualizer
      visuals:
        enum.TwoWayLeverVisuals.State:
          enabled:
            Right: { state: switch-fwd }
            Middle: { state: switch-off }
            Left: { state: switch-rev }
    - type: Damageable
      damageContainer: Inorganic
      damageModifierSet: Metallic
    - type: Destructible
      thresholds:
      - trigger:
          !type:DamageTrigger
          damage: 100
        behaviors:
        - !type:DoActsBehavior
          acts: [ "Destruction" ]
    - type: Construction
      graph: LeverGraph
      node: LeverNode
    - type: DeviceNetwork
      deviceNetId: Wireless
    - type: WirelessNetworkConnection
      range: 200
    - type: DeviceLinkSource
      ports:
        - Left
        - Right
        - Middle

#directional

- type: entity
  id: SignalSwitchDirectional
  name: signal switch
  suffix: directional
  parent: SignalSwitch
  components:
  - type: WallMount
    arc: 175
  - type: Construction
    graph: SignalSwitchDirectionalGraph
    node: SignalSwitchDirectionalNode

- type: entity
  id: SignalButtonDirectional
  name: signal button
  suffix: directional
  parent: SignalButton
  components:
  - type: WallMount
    arc: 175
  - type: Construction
    graph: SignalButtonDirectionalGraph
    node: SignalButtonDirectionalNode

- type: entity
  id: ApcNetSwitchDirectional
  name: apc net switch
  suffix: directional
  parent: ApcNetSwitch
  components:
  - type: WallMount
    arc: 175
  - type: Construction
    graph: LightSwitchDirectionalGraph
    node: LightSwitchDirectionalNode

# lockable buttons

- type: entity
  id: LockableButton
  name: lockable button
  parent: SignalButtonDirectional
  noSpawn: true
  components:
  - type: Appearance
  - type: Lock
  - type: LockVisuals
  - type: AccessReader
  - type: Sprite
    drawdepth: WallMountedItems
    sprite: Structures/Wallmounts/locked_switch.rsi
    layers:
    - state: base
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
      shader: unshaded

- type: entity
  id: LockableButtonCaptain
  name: lockable button
  suffix: Captain
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Captain"]]

- type: entity
  id: LockableButtonHeadOfPersonnel
  name: lockable button
  suffix: HeadOfPersonnel
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["HeadOfPersonnel"]]

- type: entity
  id: LockableButtonChiefEngineer
  name: lockable button
  suffix: ChiefEngineer
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["ChiefEngineer"]]

- type: entity
  id: LockableButtonChiefMedicalOfficer
  name: lockable button
  suffix: ChiefMedicalOfficer
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["ChiefMedicalOfficer"]]

- type: entity
  id: LockableButtonHeadOfSecurity
  name: lockable button
  suffix: HeadOfSecurity
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["HeadOfSecurity"]]

- type: entity
  id: LockableButtonResearchDirector
  name: lockable button
  suffix: ResearchDirector
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["ResearchDirector"]]

- type: entity
  id: LockableButtonCommand
  name: lockable button
  suffix: Command
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Command"]]

- type: entity
  id: LockableButtonCryogenics
  name: lockable button
  suffix: Cryogenics
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Cryogenics"]]

- type: entity
  id: LockableButtonSecurity
  name: lockable button
  suffix: Security
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Security"]]

- type: entity
  id: LockableButtonDetective
  name: lockable button
  suffix: Detective
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Detective"]]

- type: entity
  id: LockableButtonArmory
  name: lockable button
  suffix: Armory
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Armory"]]

- type: entity
  id: LockableButtonBrig
  name: lockable button
  suffix: Brig
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Brig"]]

- type: entity
  id: LockableButtonLawyer
  name: lockable button
  suffix: Lawyer
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Lawyer"]]

- type: entity
  id: LockableButtonEngineering
  name: lockable button
  suffix: Engineering
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Engineering"]]

- type: entity
  id: LockableButtonMedical
  name: lockable button
  suffix: Medical
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Medical"]]

- type: entity
  id: LockableButtonQuartermaster
  name: lockable button
  suffix: Quartermaster
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Quartermaster"]]

- type: entity
  id: LockableButtonSalvage
  name: lockable button
  suffix: Salvage
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Salvage"]]

- type: entity
  id: LockableButtonCargo
  name: lockable button
  suffix: Cargo
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Cargo"]]

- type: entity
  id: LockableButtonResearch
  name: lockable button
  suffix: Research
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Research"]]

- type: entity
  id: LockableButtonService
  name: lockable button
  suffix: Service
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Service"]]

- type: entity
  id: LockableButtonMaintenance
  name: lockable button
  suffix: Maintenance
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Maintenance"]]

- type: entity
  id: LockableButtonExternal
  name: lockable button
  suffix: External
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["External"]]

- type: entity
  id: LockableButtonJanitor
  name: lockable button
  suffix: Janitor
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Janitor"]]

- type: entity
  id: LockableButtonTheatre
  name: lockable button
  suffix: Theatre
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Theatre"]]

- type: entity
  id: LockableButtonBar
  name: lockable button
  suffix: Bar
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Bar"]]

- type: entity
  id: LockableButtonChemistry
  name: lockable button
  suffix: Chemistry
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Chemistry"]]

- type: entity
  id: LockableButtonKitchen
  name: lockable button
  suffix: Kitchen
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Kitchen"]]

- type: entity
  id: LockableButtonChapel
  name: lockable button
  suffix: Chapel
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Chapel"]]

- type: entity
  id: LockableButtonHydroponics
  name: lockable button
  suffix: Hydroponics
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Hydroponics"]]

- type: entity
  id: LockableButtonAtmospherics
  name: lockable button
  suffix: Atmospherics
  parent: LockableButton
  components:
  - type: AccessReader
    access: [["Atmospherics"]]

# big red button
- type: entity
  id: BigRedButton
  parent: SignalButton
  name: big red button
  description: Press it... if you dare.
  noSpawn: true
  components:
  - type: Appearance
  - type: Lock
  - type: LockVisuals
  - type: AccessReader
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Specific/big_red_button.rsi
    layers:
    - state: base
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
  - type: WirelessNetworkConnection
    range: 1000

- type: entity
  id: BigRedButtonCaptain
  parent: BigRedButton
  suffix: Captain
  components:
  - type: AccessReader
    access: [["Captain"]]

- type: entity
  id: BigRedButtonHeadOfPersonnel
  parent: BigRedButton
  suffix: HeadOfPersonnel
  components:
  - type: AccessReader
    access: [["HeadOfPersonnel"]]

- type: entity
  id: BigRedButtonChiefEngineer
  parent: BigRedButton
  suffix: ChiefEngineer
  components:
  - type: AccessReader
    access: [["ChiefEngineer"]]

- type: entity
  id: BigRedButtonChiefMedicalOfficer
  parent: BigRedButton
  suffix: ChiefMedicalOfficer
  components:
  - type: AccessReader
    access: [["ChiefMedicalOfficer"]]

- type: entity
  id: BigRedButtonHeadOfSecurity
  parent: BigRedButton
  suffix: HeadOfSecurity
  components:
  - type: AccessReader
    access: [["HeadOfSecurity"]]

- type: entity
  id: BigRedButtonResearchDirector
  parent: BigRedButton
  suffix: ResearchDirector
  components:
  - type: AccessReader
    access: [["ResearchDirector"]]

- type: entity
  id: BigRedButtonCommand
  parent: BigRedButton
  suffix: Command
  components:
  - type: AccessReader
    access: [["Command"]]

- type: entity
  id: BigRedButtonCryogenics
  parent: BigRedButton
  suffix: Cryogenics
  components:
  - type: AccessReader
    access: [["Cryogenics"]]

- type: entity
  id: BigRedButtonSecurity
  parent: BigRedButton
  suffix: Security
  components:
  - type: AccessReader
    access: [["Security"]]

- type: entity
  id: BigRedButtonDetective
  parent: BigRedButton
  suffix: Detective
  components:
  - type: AccessReader
    access: [["Detective"]]

- type: entity
  id: BigRedButtonArmory
  parent: BigRedButton
  suffix: Armory
  components:
  - type: AccessReader
    access: [["Armory"]]

- type: entity
  id: BigRedButtonBrig
  parent: BigRedButton
  suffix: Brig
  components:
  - type: AccessReader
    access: [["Brig"]]

- type: entity
  id: BigRedButtonLawyer
  parent: BigRedButton
  suffix: Lawyer
  components:
  - type: AccessReader
    access: [["Lawyer"]]

- type: entity
  id: BigRedButtonEngineering
  parent: BigRedButton
  suffix: Engineering
  components:
  - type: AccessReader
    access: [["Engineering"]]

- type: entity
  id: BigRedButtonMedical
  parent: BigRedButton
  suffix: Medical
  components:
  - type: AccessReader
    access: [["Medical"]]

- type: entity
  id: BigRedButtonQuartermaster
  parent: BigRedButton
  suffix: Quartermaster
  components:
  - type: AccessReader
    access: [["Quartermaster"]]

- type: entity
  id: BigRedButtonSalvage
  parent: BigRedButton
  suffix: Salvage
  components:
  - type: AccessReader
    access: [["Salvage"]]

- type: entity
  id: BigRedButtonCargo
  parent: BigRedButton
  suffix: Cargo
  components:
  - type: AccessReader
    access: [["Cargo"]]

- type: entity
  id: BigRedButtonResearch
  parent: BigRedButton
  suffix: Research
  components:
  - type: AccessReader
    access: [["Research"]]

- type: entity
  id: BigRedButtonService
  parent: BigRedButton
  suffix: Service
  components:
  - type: AccessReader
    access: [["Service"]]

- type: entity
  id: BigRedButtonMaintenance
  parent: BigRedButton
  suffix: Maintenance
  components:
  - type: AccessReader
    access: [["Maintenance"]]

- type: entity
  id: BigRedButtonExternal
  parent: BigRedButton
  suffix: External
  components:
  - type: AccessReader
    access: [["External"]]

- type: entity
  id: BigRedButtonJanitor
  parent: BigRedButton
  suffix: Janitor
  components:
  - type: AccessReader
    access: [["Janitor"]]

- type: entity
  id: BigRedButtonTheatre
  parent: BigRedButton
  suffix: Theatre
  components:
  - type: AccessReader
    access: [["Theatre"]]

- type: entity
  id: BigRedButtonBar
  parent: BigRedButton
  suffix: Bar
  components:
  - type: AccessReader
    access: [["Bar"]]

- type: entity
  id: BigRedButtonChemistry
  parent: BigRedButton
  suffix: Chemistry
  components:
  - type: AccessReader
    access: [["Chemistry"]]

- type: entity
  id: BigRedButtonKitchen
  parent: BigRedButton
  suffix: Kitchen
  components:
  - type: AccessReader
    access: [["Kitchen"]]

- type: entity
  id: BigRedButtonChapel
  parent: BigRedButton
  suffix: Chapel
  components:
  - type: AccessReader
    access: [["Chapel"]]

- type: entity
  id: BigRedButtonHydroponics
  parent: BigRedButton
  suffix: Hydroponics
  components:
  - type: AccessReader
    access: [["Hydroponics"]]

- type: entity
  id: BigRedButtonAtmospherics
  parent: BigRedButton
  suffix: Atmospherics
  components:
  - type: AccessReader
    access: [["Atmospherics"]]

- type: entity
  id: BigRedButtonEmergencyCommand
  parent: BigRedButton
  name: emergency button
  description: Sets the alert level of the station to Code Red. Be careful!
  components:
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Specific/big_red_button.rsi
    layers:
    - state: emergency
    - state: locked
      map: ["enum.LockVisualLayers.Lock"]
  - type: AlertLevelOnPress
    alertLevelOnActivate: red
    textField: An emergency button was pressed. The station has been set to Alert Level Red.
  - type: AccessReader
    access: [["Command"]]

# button frames

- type: entity
  id: ButtonFrame
  name: button frame
  noSpawn: true
  description: It's a frame to help distinguish switches visually.
  placement:
    mode: SnapgridCenter
    snap:
    - Wallmount
  components:
  - type: Clickable
  - type: WallMount
    arc: 360
  - type: Physics
    canCollide: false
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch_frame.rsi
    state: grey
  - type: Rotatable
  - type: Fixtures

- type: entity
  id: ButtonFrameGrey
  parent: ButtonFrame
  suffix: grey
  components:
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch_frame.rsi
    state: grey

- type: entity
  id: ButtonFrameCaution
  parent: ButtonFrame
  suffix: caution
  components:
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch_frame.rsi
    state: caution

- type: entity
  id: ButtonFrameCautionSecurity
  parent: ButtonFrame
  suffix: caution
  components:
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch_frame.rsi
    state: caution_security

- type: entity
  id: ButtonFrameExit
  parent: ButtonFrame
  suffix: exit
  components:
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch_frame.rsi
    state: exit

- type: entity
  id: ButtonFrameJanitor
  parent: ButtonFrame
  suffix: janitor
  components:
  - type: Sprite
    drawdepth: SmallObjects
    sprite: Structures/Wallmounts/switch_frame.rsi
    state: janitor
