# Debugging graphs:
- type: entity
  id: BaseDebugGraph
  abstract: true
  noSpawn: true
  suffix: DEBUG
  components:
  - type: NodeGraph
  - type: Tag
    tags:
    - Debug

- type: entity
  id: DebugGraphA
  noSpawn: true
  parent: BaseDebugGraph
  name: debug graph
  description: Type A debug graph
  suffix: DEBUG
  components:
  - type: NodeGraph
    graphProto: DebugGraphA
    color: "#00FF00"

- type: entity
  id: DebugGraphB
  noSpawn: true
  parent: BaseDebugGraph
  name: debug graph
  description: Type B debug graph
  suffix: DEBUG
  components:
  - type: NodeGraph
    graphProto: DebugGraphB
    color: "#FFFFFF"


# Debugging nodes:
- type: entity
  id: BaseDebugNode
  abstract: true
  noSpawn: true
  suffix: DEBUG
  components:
  - type: GraphNode
  - type: Tag
    tags:
    - Debug

- type: entity
  id: DebugNodeA
  parent: [ BaseDebugNode, BaseItem ]
  name: debug node (type A)
  description: Type A debug node
  suffix: DEBUG
  components:
  - type: GraphNode
    graphProto: DebugGraphA
  - type: Sprite
    noRot: true
    drawdepth: Effects #it needs to draw over stuff.
    sprite: Structures/Specific/anomaly.rsi
    layers:
    - state: anom1
      map: ["enum.AnomalyVisualLayers.Base"]

- type: entity
  id: DebugNodeAAuto
  parent: DebugNodeA
  name: debug node (autolinking type A)
  description: Type A debug node with autolinker
  suffix: DEBUG
  components:
  - type: DebugNodeAutolinker
  - type: Sprite
    layers:
    - state: anom1-pulse
      map: ["enum.AnomalyVisualLayers.Base"]

- type: entity
  id: DebugNodeAProxy
  noSpawn: true
  parent: BaseDebugNode
  name: debug node (proxy type A)
  description: Type A debug proxy node
  suffix: DEBUG
  components:
  - type: GraphNode
    graphProto: DebugGraphA
  - type: DebugNodeAutolinker
  - type: ProxyNode

- type: entity
  id: DebugNodeAPoly
  parent: BaseItem
  name: debug node container (type A)
  description: Type A debug poly node
  suffix: DEBUG
  components:
  - type: PolyNode
    proxies:
      debug: DebugNodeAProxy
  - type: Sprite
    drawdepth: Objects
    sprite: Structures/Storage/Crates/artifact.rsi
    layers:
    - state: artifact_container
      map: ["enum.StorageVisualLayers.Base"]
    - state: artifact_container_door
      map: ["enum.StorageVisualLayers.Door"]
    - state: locked
      map: ["enum.StorageVisualLayers.Lock"]
      shader: unshaded
  - type: Tag
    tags:
    - Debug

- type: entity
  id: DebugNodeB
  parent: [ BaseDebugNode, BaseItem ]
  name: debug node (type B)
  description: Type B debug node
  suffix: DEBUG
  components:
  - type: GraphNode
    graphProto: DebugGraphB
  - type: Sprite
    noRot: true
    drawdepth: Effects #it needs to draw over stuff.
    sprite: Structures/Specific/anomaly.rsi
    layers:
    - state: anom2
      map: ["enum.AnomalyVisualLayers.Base"]

- type: entity
  id: DebugNodeBAuto
  parent: DebugNodeB
  name: debug node (autolinking type B)
  description: Type B debug node with autolinker
  suffix: DEBUG
  components:
  - type: DebugNodeAutolinker
  - type: Sprite
    layers:
    - state: anom2-pulse
      map: ["enum.AnomalyVisualLayers.Base"]

- type: entity
  id: DebugNodeBProxy
  noSpawn: true
  parent: BaseDebugNode
  name: debug node (proxy type B)
  description: Type B debug proxy node
  suffix: DEBUG
  components:
  - type: GraphNode
    graphProto: DebugGraphB
  - type: DebugNodeAutolinker
  - type: ProxyNode

- type: entity
  id: DebugNodeBPoly
  parent: BaseItem
  name: debug node container (type B)
  description: Type B debug poly node
  suffix: DEBUG
  components:
  - type: PolyNode
    proxies:
      debug: DebugNodeBProxy
  - type: Sprite
    noRot: true
    sprite: Structures/Machines/Anomaly/anomaly_vessel.rsi
    layers:
    - state: base
    - state: powered-1
      shader: unshaded
      map: ["enum.PowerDeviceVisualLayers.Powered"]
    - state: panel
      map: ["enum.WiresVisualLayers.MaintenancePanel"]
  - type: Tag
    tags:
    - Debug

- type: entity
  id: DebugNodeABPoly
  parent: BaseItem
  name: debug node container (type AB)
  description: Type B debug poly node
  suffix: DEBUG
  components:
  - type: PolyNode
    proxies:
      debugA: DebugNodeAProxy
      debugB: DebugNodeBProxy
  - type: Sprite
    noRot: true
    sprite: Structures/Storage/Crates/generic.rsi
    layers:
    - state: base
      map: ["enum.StorageVisualLayers.Base"]
    - state: closed
      map: ["enum.StorageVisualLayers.Door"]
  - type: Tag
    tags:
    - Debug


# Debugging tools:
- type: entity
  id: DebugNodeLinker
  parent: BaseItem
  name: node linker
  description: Tool for debugging node graphs
  suffix: DEBUG
  components:
  - type: Tag
    tags:
    - Debug
  - type: DebugNodeLinker
  - type: Sprite
    sprite: Objects/Tools/multitool.rsi
    layers:
    - state: icon
    - state: green-unlit
      shader: unshaded
