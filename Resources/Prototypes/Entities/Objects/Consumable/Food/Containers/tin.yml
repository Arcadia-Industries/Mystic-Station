# Base

- type: entity
  abstract: true
  parent: FoodBase
  id: FoodTinBase
  name: tin
  description: A tin of something, sealed tight.
  components:
  - type: SolutionContainerManager
    solutions:
      food:
        maxVol: 20
  - type: Openable
    openableByHand: false
    sound:
      path: /Audio/Items/can_open3.ogg
  - type: Destructible
    thresholds:
    # if tinned food is nuked just delete it, no sound
    - trigger:
        !type:DamageTrigger
        damage: 50
      behaviors:
      - !type:DoActsBehavior
        acts: [ "Destruction" ]
    - trigger:
        !type:DamageTrigger
        damage: 6
      behaviors:
      - !type:OpenBehavior
  - type: Appearance
  - type: Sprite
    sprite: Objects/Consumable/Food/snacks.rsi
  - type: Item
    sprite: Objects/Consumable/Food/snacks.rsi
    heldPrefix: packet
    size: 3
  - type: DamageOnLand
    damage:
      types:
        Blunt: 3
  - type: DamageOtherOnHit
    damage:
      types:
        Blunt: 3
  - type: Damageable
    damageContainer: Inorganic
  - type: StaticPrice
    price: 50

- type: entity
  abstract: true
  parent: BaseItem
  id: FoodTinBaseTrash
  name: empty tin
  description: An empty tin. Could get a bit of metal from this.
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/snacks.rsi
  - type: Item
    sprite: Objects/Consumable/Food/snacks.rsi
    heldPrefix: packet
    size: 3
  - type: Tag
    tags:
      - Trash
  - type: PhysicalComposition
    materialComposition:
      Steel: 100
# Tins

# Need something that you can open these tins with. I suggest a prying or cutting tool.

- type: entity
  parent: FoodTinBase
  id: FoodTinPeaches
  name: tinned peaches
  description: Just a nice can of ripe peaches swimming in their own juices.
  components:
  - type: Sprite
    layers:
    - state: peachtin
      map: ["icon"]
  - type: GenericVisualizer
    visuals:
      enum.DrinkCanStateVisual.Opened:
        icon:
          True: {state: "peachtin-open"}
          False: {state: "peachtin"}
  - type: SolutionContainerManager
    solutions:
      food:
        maxVol: 20
        reagents:
        - ReagentId: Nutriment
          Quantity: 15
  - type: FlavorProfile
    flavors:
      - sweet
      - funny
  - type: Food
    trash: FoodTinPeachesTrash

- type: entity
  parent: FoodTinBaseTrash
  id: FoodTinPeachesTrash
  name: tinned peaches
  components:
  - type: Sprite
    state: peachtin-empty

# slightly run down texture and different name
- type: entity
  parent: FoodTinPeaches
  id: FoodTinPeachesMaint
  name: Maintenance Peaches
  components:
  - type: Sprite
    layers:
    - state: peachtinmaint
      map: ["icon"]
  - type: GenericVisualizer
    visuals:
      enum.DrinkCanStateVisual.Opened:
        icon:
          True: {state: "peachtinmaint-open"}
          False: {state: "peachtinmaint"}
  - type: Food
    trash: FoodTinPeachesMaintTrash

# only exists for backwards compatibility with a few maps, nothing else uses it
- type: entity
  parent: FoodTinPeachesMaint
  id: FoodTinPeachesMaintOpen
  components:
  - type: Sprite
    layers:
    - state: peachtinmaint-open
      map: ["icon"]
  - type: Openable
    opened: true

- type: entity
  parent: FoodTinBaseTrash
  id: FoodTinPeachesMaintTrash
  name: Maintenance Peaches
  components:
  - type: Sprite
    state: peachtinmaint-empty

- type: entity
  parent: FoodTinBase
  id: FoodTinBeans
  name: tin of beans
  description: Musical fruit in a slightly less musical container.
  components:
  - type: Sprite
    layers:
    - state: beans
      map: ["icon"]
  - type: GenericVisualizer
    visuals:
      enum.DrinkCanStateVisual.Opened:
        icon:
          True: {state: "beans-open"}
          False: {state: "beans"}
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: Nutriment
          Quantity: 15
  - type: FlavorProfile
    flavors:
    - savory
    - salty
    - cheap
  - type: Food
    trash: FoodTinBeansTrash

- type: entity
  parent: FoodTinBaseTrash
  id: FoodTinBeansTrash
  name: tin of beans
  components:
  - type: Sprite
    state: beans-empty

# MRE can

- type: entity
  parent: FoodTinBase
  id: FoodTinMRE
  name: tinned meat
  description: A standard issue tin of meat with a convenient pull tab.
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/mre.rsi
    - state: tin-closed
      map: ["icon"]
  - type: GenericVisualizer
    visuals:
      enum.DrinkCanStateVisual.Opened:
        icon:
          True: {state: "tin"}
          False: {state: "tin-closed"}
  # the convenient pull tab
  - type: Openable
    openableByHand: true
  - type: SolutionContainerManager
    solutions:
      food:
        reagents:
        - ReagentId: Nutriment
          Quantity: 15
  - type: FlavorProfile
    flavors:
    - meaty
    - salty
    - cheap
  - type: Food
    trash: FoodTinMRETrash

- type: entity
  parent: FoodTinBaseTrash
  id: FoodTinMRETrash
  name: tinned meat
  components:
  - type: Sprite
    sprite: Objects/Consumable/Food/mre.rsi
    state: tin-trash
