# Silver: Todo break out into damage_type,damage_class, damage_container yml files when we support loading prototypes by priority.
- type: damageType
  id: Blunt

- type: damageType
  id: Slash

- type: damageType
  id: Piercing

- type: damageType
  id: Heat

- type: damageType
  id: Shock

- type: damageType
  id: Cold

# Poison damage. Generally caused by various reagents being metabolised.
- type: damageType
  id: Poison

- type: damageType
  id: Radiation

# Damage due to being unable to breathe.
# Represents not enough oxygen (or equivalent) getting to the blood.
- type: damageType
  id: Asphyxiation

# Damage representing not having enough blood.
# Represents there not enough blood to supply oxygen (or equivalent).
- type: damageType
  id: Bloodloss

- type: damageType
  id: Cellular

- type: damageGroup
  id: Brute
  damageTypes:
    - Blunt
    - Slash
    - Piercing

- type: damageGroup
  id: Burn
  damageTypes:
    - Heat
    - Shock
    - Cold

# Airloss (sometimes called oxyloss)
# Caused by asphyxiation or bloodloss.
# Note that most medicine and damaging effects should probably modify either asphyxiation or
# bloodloss, not this whole group, unless you have a wonder drug that affects both.
- type: damageGroup
  id: Airloss
  damageTypes:
    - Asphyxiation
    - Bloodloss

# As with airloss, most medicine and damage effects should probably modify either poison or radiation.
# Though there are probably some radioactive poisons.
- type: damageGroup
  id: Toxin
  damageTypes:
    - Poison
    - Radiation


- type: damageGroup
  id: Genetic
  damageTypes:
    - Cellular

- type: damageContainer
  id: allDamageContainer
  supportAll: true


# Burn contains shock. If a doctor gets a burn patients, what do they do?
# --> Apply burn ointment to heal heat damage
# --> Somehow deal with cold-burns
# --> Using wiring to fix shock damage??? What does shock damage represent here biologically?
- type: damageContainer
  id: biologicalDamageContainer
  supportedGroups:
    - Brute
    - Burn
    - Toxin
    - Airloss
    - Genetic

# Burn contains cold --> metallic parts damaged by the cold of space?
# The solar panels are gonna have a great time.
- type: damageContainer
  id: metallicDamageContainer
  supportedGroups:
    - Brute
    - Burn



# Maybe change damage groups & types around:

# - remove damage type shock
# + add damage type electrical. Represents damage to electrical components. Fixed with wires or circuits. EMP would cause pure electrical damage?
# add damage group shock ( heat + electrical ). can hurt organics and computers, but would deal less damage to organics as they do not support electrical (unless they have implants).

# I know there is already some talk about reworking how radiation works in general, but I still think we should make some sensible changes here:
# - Remove damage type radiation
# + add damage group radiation (heat + cellular + electrical). Would damage organics, computers, and metallics, but would deal less damage to metallics as they support only one damageType.
# SS13 Wikis (TGstation, Para) describe radiation as not being a 'damageType' as such. It is  it's own thing that can contaminate object and just deals toxin-damage. Funnily, it doesnt seem to do cellular damage, which seems like that is exactly what that damageType should be there there for?

# Also, when organs get the ability to be damaged, they will need a damageContainer with some sort of damage type / group. We could just give them the biologicalDamageContainer (or equivalent for implants).
# However that could make healing organ damage quite complicated. Compare with SS13 TGStation, organs just have a single number representing damage (afaik).
# So maybe add damageType: "internal" or "organ"?
# If organs & organ damaging/healing/targeting is done well, then changing between these systems should really only require modifiying yaml files.

# These changes are based around the idea that a single damageType can be part of more than one damage group, which was already the way the code was written before I started making changes.
# Furthermore, some of the logic relies on the fact that when dealing damage from a damage Group, damage to unsupported damage types is ignored. Again, the code already did that.