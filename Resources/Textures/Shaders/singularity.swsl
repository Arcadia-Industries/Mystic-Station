//Gravitational lensing effect. Edited from https://unionassets.com/blog/the-effect-of-the-gravitational-lens-195 to be Clyde based (based on what)

uniform sampler2D SCREEN_TEXTURE;
uniform highp vec2 renderScale;
uniform highp float falloff;
uniform highp float intensity;
uniform highp float[6] positions;
uniform int count;

void fragment() {

    highp vec2 offset = vec2(0,0);
    
    for (int i = 0; i < count; i++) {
    
        highp vec2 positionInput = vec2(positions[i*2], positions[i*2+1]);
	    highp float distanceToCenter = length((FRAGCOORD.xy - positionInput) / renderScale);

        highp float deformation = (pow(intensity, 2.0)*500.0) / pow(distanceToCenter, pow(falloff, 0.5));

        if(deformation > 0.8) //Edit this for inward effect
          deformation = pow(deformation, 0.3);

        offset -= deformation*(FRAGCOORD.xy - positionInput);
    }
    
    COLOR = zTextureSpec(SCREEN_TEXTURE, (FRAGCOORD.xy + offset)*SCREEN_PIXEL_SIZE);
}
