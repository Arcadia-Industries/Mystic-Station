// Sets the alpha of the image to how white or black it is

light_mode unshaded;
//shader_type canvas_item;
uniform highp float outline_width; // = 2.0;
// TODO: implement that hint_color thingy.
//uniform vec4 outline_color: hint_color;
uniform highp vec4 outline_color; // =vec4(1.0,0.0,0.0,0.33);

void fragment() {
	highp vec4 col = zTexture(UV);
	highp vec2 ps = TEXTURE_PIXEL_SIZE;
	highp float a;
	highp float maxa = col.a;
	highp float mina = col.a;

	// note: these bypass zTexture because only alpha is queried.
	a = texture2D(TEXTURE, UV + vec2(0.0, -outline_width)*ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

    a = texture2D(TEXTURE, UV + vec2(-outline_width, -outline_width)*ps).a;
    maxa = max(a, maxa);
    mina = min(a, mina);

	a = texture2D(TEXTURE, UV + vec2(0.0, outline_width)*ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

    a = texture2D(TEXTURE, UV + vec2(outline_width, -outline_width)*ps).a;
    maxa = max(a, maxa);
    mina = min(a, mina);

	a = texture2D(TEXTURE, UV + vec2(-outline_width,0.0)*ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

    a = texture2D(TEXTURE, UV + vec2(-outline_width, outline_width)*ps).a;
    maxa = max(a, maxa);
    mina = min(a, mina);

	a = texture2D(TEXTURE, UV + vec2(outline_width, 0.0)*ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

    a = texture2D(TEXTURE, UV + vec2(outline_width, outline_width)*ps).a;
    maxa = max(a, maxa);
    mina = min(a, mina);

	COLOR = mix(col, outline_color, maxa-col.a);
}
